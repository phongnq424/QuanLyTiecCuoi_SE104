<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ImageBrush x:Key="MinusIconSource" ImageSource="../../Resources/Images/ControlBarImg/minimize.png"></ImageBrush>
    <ImageBrush x:Key="MinusIconMouseOverSource" ImageSource="../../Resources/Images/ControlBarImg/minimize_mouseover.png"></ImageBrush>
    <ImageBrush x:Key="CloseIconSource" ImageSource="../../Resources/Images/ControlBarImg/close.png"></ImageBrush>
    <ImageBrush x:Key="CloseIconMouseOverSource" ImageSource="../../Resources/Images/ControlBarImg/close_mouseover.png"></ImageBrush>
    <ImageBrush x:Key="MaxiIconSource" ImageSource="../../Resources/Images/ControlBarImg/Maxi.png"></ImageBrush>
    <ImageBrush x:Key="MaxiIconMouseOverSource" ImageSource="../../Resources/Images/ControlBarImg/MaxiMouseOver.png"></ImageBrush>
    <ImageBrush x:Key="CloseIconBillInforSource" ImageSource="/Resources/Images/HoaDon/closeBill_Infor.png"></ImageBrush>


    <Style x:Key="ButtonMinimizeStyle" TargetType="Button">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="BorderImg" 
                            Background="{StaticResource MinusIconSource}"
                            Height="{TemplateBinding Height}" 
                            Width="{TemplateBinding Width}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderImg" Property="Background" Value="{StaticResource MinusIconMouseOverSource}"/>
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="BorderImg" Property="Width" Value="25"/>
                            <Setter TargetName="BorderImg" Property="Height" Value="25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="MyButtonCloseStyle" TargetType="Button">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="BorderImg" 
                            Background="{StaticResource CloseIconSource}"
                            Height="{TemplateBinding Height}" 
                            Width="{TemplateBinding Width}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderImg" Property="Background" Value="{StaticResource CloseIconMouseOverSource}"/>
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="BorderImg" Property="Width" Value="25"/>
                            <Setter TargetName="BorderImg" Property="Height" Value="25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyButtonMaximineStyle" TargetType="Button">
        <Setter Property="Height" Value="27"/>
        <Setter Property="Width" Value="27"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="BorderImg" 
                            Background="{StaticResource MaxiIconSource}"
                            Height="{TemplateBinding Height}" 
                            Width="{TemplateBinding Width}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderImg" Property="Background" Value="{StaticResource MaxiIconMouseOverSource}"/>
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="BorderImg" Property="Width" Value="22"/>
                            <Setter TargetName="BorderImg" Property="Height" Value="22"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="ButtonBorder"
                        Height="auto"
                        Width="auto"
                        BorderThickness="1"
                        BorderBrush="#603127"
                        CornerRadius="25">
                        <Border.Background>
                            <SolidColorBrush x:Name="SolidColor" Color="White" Opacity="100"></SolidColorBrush>
                        </Border.Background>
                        <TextBlock 
                            Margin="15,5"
                            FontSize="20"
                            FontFamily="Cambria"
                            Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center">
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="2"/>
                        </Trigger>

                        <EventTrigger RoutedEvent="Button.PreviewMouseDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="SolidColor" 
                                                  Storyboard.TargetProperty="Opacity" 
                                                  From="1" To="0.5" Duration="0:0:0.1" />
                                    <DoubleAnimation Storyboard.TargetName="ButtonBorder"
                                                  Storyboard.TargetProperty="Opacity" 
                                                  To="0.5" Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.PreviewMouseUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="SolidColor" 
                                                  Storyboard.TargetProperty="Opacity" 
                                                  From="0.5" To="1" Duration="0:0:0.1" />
                                    <DoubleAnimation Storyboard.TargetName="ButtonBorder"
                                                 Storyboard.TargetProperty="Opacity" 
                                                 To="1" Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonAddServiceStyle" TargetType="Button">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="ButtonBorder"
                    Height="auto"
                    Width="auto"
                    BorderThickness="1"
                    BorderBrush="#603127"
                    CornerRadius="15">
                        <Border.Background>
                            <SolidColorBrush x:Name="SolidColor" Color="White" Opacity="100"></SolidColorBrush>
                        </Border.Background>
                        <TextBlock 
                        Margin="15,5"
                        FontSize="15"
                        FontFamily="Cambria"
                        Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center">
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="2"/>
                        </Trigger>

                        <EventTrigger RoutedEvent="Button.PreviewMouseDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="SolidColor" 
                                              Storyboard.TargetProperty="Opacity" 
                                              From="1" To="0.5" Duration="0:0:0.1" />
                                    <DoubleAnimation Storyboard.TargetName="ButtonBorder"
                                              Storyboard.TargetProperty="Opacity" 
                                              To="0.5" Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.PreviewMouseUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="SolidColor" 
                                              Storyboard.TargetProperty="Opacity" 
                                              From="0.5" To="1" Duration="0:0:0.1" />
                                    <DoubleAnimation Storyboard.TargetName="ButtonBorder"
                                             Storyboard.TargetProperty="Opacity" 
                                             To="1" Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="TextBlock.TextDecorations" Value="{x:Null}"/>
        <Setter Property="Padding" Value="0,2.5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Width" Value="250"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border 
                        x:Name="border" 
                        Background="{TemplateBinding Background}" 
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter 
                            x:Name="content"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="content" Property="TextElement.FontWeight" Value="Bold"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    


    <Style x:Key="ToggleButtonPassword" TargetType="ToggleButton">
        <Setter Property="Width" Value="18"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Image 
                        x:Name="image"
                        Stretch="Fill"
                        Source="../../Resources/Images/Login/hideIcon.png"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="image" Property="Source" Value="../../Resources/Images/Login/showIcon.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LoginButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="48"/>
        <Setter Property="Width" Value="300"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="ButtonBorder"
                    Height="{TemplateBinding Height}"
                    Width="{TemplateBinding Width}"
                    BorderThickness="1"
                    BorderBrush="Black"
                    Background="#F3E5CF"
                    CornerRadius="15">
                        <TextBlock 
                           FontFamily="Cambria"
                            HorizontalAlignment="Center" VerticalAlignment="Center"
                           Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}">
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="#FDE6C2"/>
                            <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ForgotPassWordStyle" TargetType="Button">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="0,10,10,0"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="Cambria"/>
        <Setter Property="Opacity" Value="0.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>

                    <TextBlock 
                            FontFamily="Cambria"
                            HorizontalAlignment="Center" VerticalAlignment="Center"
                            Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}">
                    </TextBlock>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>


                        <EventTrigger RoutedEvent="MouseLeftButtonDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TextDecorations">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static TextDecorations.Underline}" />
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ButtonStyleDeleteBillInfor" TargetType="Button">
        <Setter Property="Margin" Value="-10,0,0,0"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="BorderImg" 
                        Background="{StaticResource CloseIconBillInforSource}"
                        Height="{TemplateBinding Height}" 
                        Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LogoutButtonStyle" TargetType="Button">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="Cambria"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseLeftButtonDown">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation 
                        Storyboard.TargetProperty="Opacity" 
                        To="0.5" Duration="0:0:0.2" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="XButtonStyle" TargetType="Button">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Margin="5" Width="10" Height="10">
                        <Path Stroke="Black" StrokeThickness="1" Data="M 0 0 L 10 10 M 0 10 L 10 0" 
                          HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="RadioButton2Style" TargetType="RadioButton">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="TextBlock.TextDecorations" Value="{x:Null}"/>
        <Setter Property="Padding" Value="0,2.5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border 
                        CornerRadius="10"
                        x:Name="border" 
                        BorderBrush="Black"
                        BorderThickness="1"
                        Background="{TemplateBinding Background}" 
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter 
                            x:Name="content"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="content" Property="TextElement.FontWeight" Value="Bold"/>
                            <Setter Property="Background" Value="#FFE4C3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>